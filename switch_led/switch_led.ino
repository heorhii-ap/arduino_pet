/*Программа переключения светодиода по нажатию на кнопку.
  В программе реализован антидребез кнопки через задержку построенную на millis()*/


const byte btnPin = 3; // пин куда подключена кнопка
const byte ledPin = 4; // пин куда подключен светодиод

boolean btnState; // переменная, в которую считывается текущее состояние кнопки
boolean btnFlag = false; // переменная-флажок, которая хранит предыдущее состояние кнопки
boolean ledFlag = HIGH; // переменная, которая хранит состояние светодиода (изначально светодиод погашен)

unsigned long prevTime; // переменная, необходимая для формирования счетчика на millis()
byte timeDelay = 50; // время задержки, для реализации антидребезга (можно менять в зависимости от изношенности контактов)

void setup() {
  Serial.begin(9600); // инициализируем работу с портом
  pinMode(btnPin, INPUT_PULLUP); // инициализируем кнопку через внутренний подтягивающий резистор
  pinMode(ledPin, OUTPUT); // инициализируем пин светодиода как выход
  digitalWrite(ledPin, ledFlag); // гасим светодиод при включении питания
}

void loop() {

  // считываем состояние кнопки и инвертируем для более удобной и логичной работы с кнопкой(0 - не нажата, 1 - нажата)
  btnState = !digitalRead(btnPin);

  /*условие выполняется если кнопка нажата и до этого не была нажата
    антидребезг кнопки реализован через задержку на функции millis()*/

  if (btnState == true && btnFlag == false && millis() - prevTime >= timeDelay) {
    Serial.println ("Кнопка нажата"); // выводим сообщение в порт
    btnFlag = true; // сбрасываем флажок;
    prevTime = millis(); // сбрасываем счетчик;
    ledFlag = !ledFlag; // инвертируем флажок светодиода
    digitalWrite(ledPin, ledFlag); // светодиод зажигается/гаснет (переключает своё состояние при нажатии на кнопку)
  }

  // условие выполняется при отпускании кнопки
  if (btnState == false && btnFlag == true && millis() - prevTime >= timeDelay) {
    Serial.println ("Кнопка отпущена"); // выводим сообщение в порт
    btnFlag = false; // сбрасываем флажок;
    prevTime = millis(); // сбрасываем счетчик;
  }
}
